version: '3'

services:
  postgres:
    container_name: postgres
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      -  postgresql_bin:/usr/lib/postgresql
      -  postgresql_data:/var/lib/postgresql/data
      -  ./conf/postgres/postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    ports:
      - 5432:5432
    networks:
      - monitor
      
  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
  #     PGADMIN_DEFAULT_PASSWORD: postgres
  #     PGADMIN_LISTEN_PORT: 5050
  #     PGADMIN_CONFIG_SERVER_MODE: 'False'
  #   volumes:
  #     - pgadmin_root_prefs:/root/.pgadmin
  #   ports:
  #     - 5050:5050
  #   networks:
  #     - monitor
  
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin1234
      - DOCKER_INFLUXDB_INIT_ORG=myorg
      - DOCKER_INFLUXDB_INIT_BUCKET=user
    volumes:
      - influx_data:/var/lib/influxdb
    networks:
      - monitor

  elasticsearch:
    image: elasticsearch:7.10.1
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - http.host=0.0.0.0
      - http.port=9200
      - transport.host=127.0.0.1
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "http.cors.allow-origin=*"
      - "http.cors.enabled=true"
      - "http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      - "http.cors.allow-credentials=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
      - ./conf/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - monitor

  dejavu:
    image: appbaseio/dejavu:latest
    container_name: dejavu
    ports:
     - "1358:1358"
    networks:
      - monitor    
    
  grafana:
    container_name: grafana
    image: grafana/grafana-oss:8.3.1
    ports:
      - 3000:3000
    user: '0'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./conf/grafana/data/plugins:/var/lib/grafana/plugins
      - ./conf/grafana/grafana.ini:/etc/grafana/grafana.ini
    depends_on:
      - postgres
    restart: always
    networks:
      - monitor
      
networks:
  monitor:
    driver: bridge

volumes:
  es_data:
    driver: local
  influx_data:
    driver: local
  pgadmin_root_prefs:
    driver: local
  postgresql_data:
    driver: local
  postgresql_bin:
    driver: local
